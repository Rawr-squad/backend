version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: orencode_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - orencode_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  opendao:
    image: hashicorp/vault:1.13.0
    container_name: orencode_opendao
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    networks:
      - orencode_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: orencode_backend
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - OPENBAO_ADDR=http://opendao:8200
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - orencode_network
    command: >
      sh -c "echo 'Applying database migrations...' &&
             alembic upgrade head &&
             echo 'Creating admin user...' &&
             python scripts/create_admin.py &&
             echo 'Creating test users...' &&
             python scripts/create_test_users.py &&
             echo 'Starting FastAPI server...' &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

volumes:
  postgres_data:

networks:
  orencode_network:
    driver: bridge